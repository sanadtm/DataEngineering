# -*- coding: utf-8 -*-
"""openweathermap-Sanad.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-jeJXEMCJH-kuolJaRjSr9lZfiAnOFNi
"""

# Sanad Thapa - Weather Checker
# Data Engineering - Spring 2025

import requests
from pprint import pprint
def check_weather(city):
    api_key = "c667d923f00a4bd60546f02d538f2084"
    weather_api = "http://api.openweathermap.org/data/2.5/weather"
    forecast_api = "http://api.openweathermap.org/data/2.5/forecast"

    query = {
        "q": city,
        "appid": api_key,
        "units": "metric"
    }

    # --- Current Weather Info ---
    res = requests.get(weather_api, params=query)
    weather_data = res.json()

    if res.status_code == 200 and "main" in weather_data:
        temp_now = weather_data["main"]["temp"]
        pressure = weather_data["main"]["pressure"]
        humidity = weather_data["main"]["humidity"]
        condition = weather_data["weather"][0]["main"]

        print(f"\nCurrent Weather in {city.title()}:\n")
        print(f" Temp       : {temp_now}°C")
        print(f" Pressure   : {pressure} hPa")
        print(f" Humidity   : {humidity}%")
        print(f" Condition  : {condition.title()}\n")
    else:
        print(f"\nCouldn't find the city: {weather_data.get('message', 'Unknown error')}")
        return

    # --- Forecast Info ---
    print(f"Next 3-Day Forecast for {city.title()}")
    forecast = requests.get(forecast_api, params=query).json()
    #pprint(forecast)
    if "list" in forecast:
        for item in forecast["list"][:3]:
            day = item["dt_txt"].split()[0]
            forecast_temp = item["main"]["temp"]
            forecast_condition = item["weather"][0]["main"].title()
            forecast_des = item["weather"][0]["description"].title()
            print(f"{day} | {forecast_temp}°C | {forecast_condition} | {forecast_des}")
    else:
        print("Forecast data not available.")

# Ask Input and Call the function
city_input = input("Enter city name: ").strip()
check_weather(city_input)

